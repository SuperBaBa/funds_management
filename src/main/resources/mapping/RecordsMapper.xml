<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcq.mapper.RecordsMapper">
  <resultMap id="BaseResultMap" type="com.jcq.model.Records">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="transaction_funds" jdbcType="DOUBLE" property="transactionFunds" />
    <result column="transaction_date" jdbcType="VARCHAR" property="transactionDate" />
    <result column="transaction_type_id" jdbcType="VARCHAR" property="transactionTypeId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="trading_object" jdbcType="VARCHAR" property="tradingObject" />
  </resultMap>
  <sql id="Base_Column_List">
    id, transaction_funds, transaction_date, transaction_type_id, user_id, trading_object
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from records
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from records
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jcq.model.Records">
    insert into records (id, transaction_funds, transaction_date, 
      transaction_type_id, user_id, trading_object
      )
    values (#{id,jdbcType=VARCHAR}, #{transactionFunds,jdbcType=DOUBLE}, #{transactionDate,jdbcType=VARCHAR}, 
      #{transactionTypeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{tradingObject,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jcq.model.Records">
    insert into records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="transactionFunds != null">
        transaction_funds,
      </if>
      <if test="transactionDate != null">
        transaction_date,
      </if>
      <if test="transactionTypeId != null">
        transaction_type_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradingObject != null">
        trading_object,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="transactionFunds != null">
        #{transactionFunds,jdbcType=DOUBLE},
      </if>
      <if test="transactionDate != null">
        #{transactionDate,jdbcType=VARCHAR},
      </if>
      <if test="transactionTypeId != null">
        #{transactionTypeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="tradingObject != null">
        #{tradingObject,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcq.model.Records">
    update records
    <set>
      <if test="transactionFunds != null">
        transaction_funds = #{transactionFunds,jdbcType=DOUBLE},
      </if>
      <if test="transactionDate != null">
        transaction_date = #{transactionDate,jdbcType=VARCHAR},
      </if>
      <if test="transactionTypeId != null">
        transaction_type_id = #{transactionTypeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="tradingObject != null">
        trading_object = #{tradingObject,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcq.model.Records">
    update records
    set transaction_funds = #{transactionFunds,jdbcType=DOUBLE},
      transaction_date = #{transactionDate,jdbcType=VARCHAR},
      transaction_type_id = #{transactionTypeId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      trading_object = #{tradingObject,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap id="ResultRecordsList" type="com.jcq.model.Records" >
  			<result column="trading_object" property="tradingObject" />
			<result column="transaction_funds" property="transactionFunds" />
			<result column="transaction_date" property="transactionDate" />
			<association property="user" javaType="com.jcq.model.User" >
				<result column="user_id" property="userId" />
			</association>
			<association property="dealType" javaType="com.jcq.model.TransactionType">
				<result column="type" property="type" />
			</association>
	</resultMap>
	<select id="showRecords" parameterType="map" resultMap="ResultRecordsList">
	SELECT 
		r.trading_object , t.type , r.transaction_date, r.transaction_funds
	FROM user AS u  
		
	LEFT JOIN records AS r ON u.id=r.user_id 
		
	LEFT JOIN transaction_type AS t ON r.transaction_type_id=t.id
		
	WHERE u.id = #{id,jdbcType=VARCHAR} 
	
	LIMIT #{startNum},#{row}
	</select>
	<select id="recordsCount" parameterType="map" resultType="java.lang.Integer">
	SELECT 
		count(r.trading_object)
	FROM user AS u  
		
	LEFT JOIN records AS r ON u.id=r.user_id 
		
	LEFT JOIN transaction_type AS t ON r.transaction_type_id=t.id
		
	WHERE u.id = #{id,jdbcType=VARCHAR} 
	</select>
</mapper>